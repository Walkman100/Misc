<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgLoading.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhEAAQALMNALe1rKqon52bktDOxYSCesPCuXd1bZCOhoSCeXd1bJGOhpGPhsPBuf///wAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh+QQFCgANACwAAAAAEAAQAAAET7DJ2UqhmNrC8hxDZXUAgIGg2JQl
        hYYTa7ow1U6G4U1B0CQ5nafXA+Z2RN9x1+hRCISMQICBEhCU6fQJxR4ODS2V2/geFOGxx4xmThYLTwQA
        IfkEBQoADQAsAAAAABAAEAAABEiwydnGoJham6cx1dYUBfZ94UiW3kmtbJuRFEF0EwA0to3rut6tA9z5
        cA0d5XDIBAIYJpPyfC6lDYGgUYVes9qtFRfeIifaTgQAIfkEBQoADQAsAAAAABAAEAAABE2wydlSopia
        bfIkRMN1w4CBoEiW5odSbDshSFZSx+FNRdEsOZ2n1wPmdkSfQrGTMBgUgSADAGCkUkq1GsU2AoHG1tr9
        gsPc3TncnIA9EQAh+QQFCgANACwAAAAAEAAQAAAESLDJ2QihmFqb5znV1hgG9n3hSJbeSa1sm5GUIHTT
        MDS2jeu63q0D3PlwDR0lEMgUChgmk/J8LqUNAKBRhV6z2q0VF94iJ9pOBAAh+QQFCgANACwAAAAAEAAQ
        AAAETLDJ2daimKrD8xRCs3UEgYFg0yGl+aEUW54hNk9B4E2G0eS5Xc+QAOo8w8TvKPRNAIDMYICBQinT
        KcUaLRQaWeo2yvB+tbuyd4dZZyIAIfkEBQoADQAsAAAAABAAEAAABEiwydmEoJham2cI1dYcB/Z94UiW
        3kmtbJuRFAB0E0E0to3rut6tA9z5cA0dpVDIGAwYJpPyfC6ljcGgUYVes9qtFRfeIifaTgQAIfkEBQoA
        DQAsAAAAABAAEAAABEywydlCoJhamycA1dYIAvZ94UiW3kmtbJuRFMN0k6I0RV/gh+DC9+sEDwteEXig
        DAYZBALzfFIIWIKz2jAYGlnttuv9YnFkL5qSSHQiACH5BAUKAA0ALAAAAAAQABAAAARIsMnZAKCYWptn
        KdXWBAH2feFIlt5JrWybkdQwdJMgNLaN67rerQPc+XANHcVgyBwOGCaT8nwupQ0CoVGFXrParRUX3iIn
        2k4EADs=
</value>
  </data>
  <data name="imgGameImage.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAQAAAAAAAoAQAAFgAAACgAAAAQAAAAIAAAAAEABAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAACHeAAAAAAACPAHgAAAAACHh3BwAAAAB///8PAAAAAP///w9wAAAA///wf/+A
        AAD/iH////+AAIAAAP////+AAAAAj/cACPAAAAAH8H9w+AAAAAjw//D4AAAAAPB/cPAAAAAAfwAPcAAA
        AACH//cAAAAAAAAIAACAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAQAA
</value>
  </data>
</root>